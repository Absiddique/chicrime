install.packages('shiny')
load("~/Downloads/demo_london_eye.rda")
Crimes_2013 <- read.csv("~/Dropbox/BigData/Crimes_2013.csv")
View(Crimes_2013)
load("~/Downloads/demo_london_eye.rda")
Crimes_2013 <- read.csv("~/Dropbox/BigData/Crimes_2013.csv")
View(Crimes_2013)
save()
save(chicago)
save(chicago, file ="chicago.rda")
save(crimes_2013, file ="chicago2013.rda")
save(df,file="2013.rda")
getwd
getwd()
load("~/2013.rda")
View(Crimes_2013)
View(Crimes_2013)
View(Crimes_2013)
View(Crimes_2013)
View(df)
View(temp.geocode)
View(temp.geocode)
View(temp.geocode)
View(df)
View(Crimes_2013)
View(Crimes_2013)
getData <- function(network = 'citibikenyc'){
require(httr)
url = sprintf('http://api.citybik.es/%s.json', network)
bike = fromJSON(content(GET(url)))
lapply(bike, function(station){within(station, {
fillColor = cut(
as.numeric(bikes)/(as.numeric(bikes) + as.numeric(free)),
breaks = c(0, 0.20, 0.40, 0.60, 0.80, 1),
labels = brewer.pal(5, 'RdYlGn'),
include.lowest = TRUE
)
popup = iconv(whisker::whisker.render(
'<b>{{name}}</b><br>
<b>Free Docks: </b> {{free}} <br>
<b>Available Bikes:</b> {{bikes}}
<p>Retreived At: {{timestamp}}</p>'
), from = 'latin1', to = 'UTF-8')
latitude = as.numeric(lat)/10^6
longitude = as.numeric(lng)/10^6
lat <- lng <- NULL})
})
}
plotMap <- function(network = 'citibikenyc', width = 1600, height = 800){
data_ <- getData(network); center_ <- getCenter(network, networks)
L1 <- Leaflet$new()
L1$tileLayer(provider = 'Stamen.TonerLite')
L1$set(width = width, height = height)
L1$setView(c(center_$lat, center_$lng), 13)
L1$geoJson(toGeoJSON(data_),
onEachFeature = '#! function(feature, layer){
layer.bindPopup(feature.properties.popup)
} !#',
pointToLayer =  "#! function(feature, latlng){
return L.circleMarker(latlng, {
radius: 4,
fillColor: feature.properties.fillColor || 'red',
color: '#000',
weight: 1,
fillOpacity: 0.8
})
} !#")
L1$enablePopover(TRUE)
L1$fullScreen(TRUE)
return(L1)
}
plotMap('citibikenyc', 600, 300)
install.package(httr)
install.packages("httr")
install.packages("httr")
getData <- function(network = 'citibikenyc'){
require(httr)
url = sprintf('http://api.citybik.es/%s.json', network)
bike = fromJSON(content(GET(url)))
lapply(bike, function(station){within(station, {
fillColor = cut(
as.numeric(bikes)/(as.numeric(bikes) + as.numeric(free)),
breaks = c(0, 0.20, 0.40, 0.60, 0.80, 1),
labels = brewer.pal(5, 'RdYlGn'),
include.lowest = TRUE
)
popup = iconv(whisker::whisker.render(
'<b>{{name}}</b><br>
<b>Free Docks: </b> {{free}} <br>
<b>Available Bikes:</b> {{bikes}}
<p>Retreived At: {{timestamp}}</p>'
), from = 'latin1', to = 'UTF-8')
latitude = as.numeric(lat)/10^6
longitude = as.numeric(lng)/10^6
lat <- lng <- NULL})
})
}
plotMap <- function(network = 'citibikenyc', width = 1600, height = 800){
data_ <- getData(network); center_ <- getCenter(network, networks)
L1 <- Leaflet$new()
L1$tileLayer(provider = 'Stamen.TonerLite')
L1$set(width = width, height = height)
L1$setView(c(center_$lat, center_$lng), 13)
L1$geoJson(toGeoJSON(data_),
onEachFeature = '#! function(feature, layer){
layer.bindPopup(feature.properties.popup)
} !#',
pointToLayer =  "#! function(feature, latlng){
return L.circleMarker(latlng, {
radius: 4,
fillColor: feature.properties.fillColor || 'red',
color: '#000',
weight: 1,
fillOpacity: 0.8
})
} !#")
L1$enablePopover(TRUE)
L1$fullScreen(TRUE)
return(L1)
}
plotMap('citibikenyc', 600, 300)
install.packages("rjson")
plotMap('citibikenyc', 600, 300)
plotMap('citibikenyc', 600, 300)
install.packages("RCurl")
install.packages("RCurl")
install.packages("RJSONIO")
plotMap('citibikenyc', 600, 300)
sprintf()
install.packages("rjson")
plotMap('citibikenyc', 600, 300)
fromjson()
install.packages("RJSONIO")
fromjson()
search()
library()
library(RJSONIO)
plotMap('citibikenyc', 600, 300)
library(rjson)
plotMap('citibikenyc', 600, 300)
search()
library(rjson)
plotMap('citibikenyc', 600, 300)
plotMap('citibikenyc', 600, 300)
library(RJSONIO)
plotMap('citibikenyc', 600, 300)
library(Httr)
library(httr)
plotMap('citibikenyc', 600, 300)
search()
plotMap('citibikenyc', 600, 300)
library(rcurl)
library(RCurl)
plotMap('citibikenyc', 600, 300)
load("~/Documents/R/chitest/demo/crimestest.rda")
require(ggmap)
qmap(bologna, zoom = 12, source = "google", maptype = "roadmap")
qmap(temp.geocode, zoom = 12, source = "google", maptype = "roadmap")
?get_map
get_map(location = c(lon = -95.3632715, lat = 29.7632836),
zoom = "auto", scale = "auto",
maptype = c("terrain", "satellite", "roadmap", "hybrid", "toner", "watercolor"),
messaging = FALSE, urlonly = FALSE,
filename = "ggmapTemp", crop = TRUE,
color = c("color", "bw"),
source = c("google", "osm", "stamen", "cloudmade"),
api_key)
get_map(location = c(lon = -95.3632715, lat = 29.7632836),
zoom = "auto", scale = "auto",
maptype = c("roadmap"),
messaging = FALSE, urlonly = FALSE,
filename = "ggmapTemp", crop = TRUE,
color = c("color", "bw"),
source = c("google", "osm", "stamen", "cloudmade"),
api_key)
ggmap(map, fullpage = TRUE)
map <- get_map(location = c(lon = -95.3632715, lat = 29.7632836),
zoom = "auto", scale = "auto",
maptype = c("roadmap"),
messaging = FALSE, urlonly = FALSE,
filename = "ggmapTemp", crop = TRUE,
color = c("color", "bw"),
source = c("google", "osm", "stamen", "cloudmade"),
api_key)
ggmap(map, fullpage = TRUE)
stores <- data.frame(name=c("Commercial","Union","Bedford"),
longitude=c(-70.25042295455933,-70.26050806045532,-70.27726650238037),
latitude=c(43.657471302616806,43.65663299041943,43.66091757424481))
location = c(-70.2954, 43.64278, -70.2350, 43.68093)
# Fetch the map
portland = get_map(location = location, source = "osm")
# Draw the map
portlandMap = ggmap(portland)
# Add the points layer
portlandMap = portlandMap + geom_point(data = stores, aes(x = longitude, y = latitude), size = 5)
# Add the labels
portlandMap + geom_text(data = stores, aes(label = name, x = longitude+.001, y = latitude), hjust = 0)
library(ggmap)
stores <- data.frame(name=c("Commercial","Union","Bedford"),
longitude=c(-70.25042295455933,-70.26050806045532,-70.27726650238037),
latitude=c(43.657471302616806,43.65663299041943,43.66091757424481))
location = c(-70.2954, 43.64278, -70.2350, 43.68093)
# Fetch the map
portland = get_map(location = location, source = “google”)
# Draw the map
portlandMap = ggmap(portland)
# Add the points layer
portlandMap = portlandMap + geom_point(data = stores, aes(x = longitude, y = latitude), size = 5)
# Add the labels
portlandMap + geom_text(data = stores, aes(label = name, x = longitude+.001, y = latitude), hjust = 0)
load("~/Documents/R/chitest/demo/crimestest.rda")
murder <- subset(df, Primary.Type == “BATTERY”)
murder <- subset(df, Primary.Type == "BATTERY")
qmplot(Longitude, Latitude, data = BATTERY, colour = I(’red’), size = I(3), darken = .3)
qmplot(Longitude, Latitude, data = BATTERY, colour = I('red'), size = I(3), darken = .3)
search()
library(ggmap)
qmplot(Longitude, Latitude, data = BATTERY, colour = I('red'), size = I(3), darken = .3)
qmplot(Longitude, Latitude, data = murder, colour = I('red'), size = I(3), darken = .3)
map.center <- geocode(“Chicago,IL”)
map.center <- geocode("Chicago,IL")
SHmap <- qmap(c(lon=map.center$lon, lat=map.center$lat), source="google", zoom=12)
SHmap + geom_point(
aes(x=Longitude, y=Latitude, colour=App), data=df) +
scale_colour_manual(values=c("dark blue","orange"))+
labs(colour="Appointment Required")
SHmap + geom_point(
aes(x=Longitude, y=Latitude, colour=Red), data=df) +
scale_colour_manual(values=c("dark blue","orange"))+
labs(colour="Appointment Required")
SHmap + geom_point(
aes(x=Longitude, y=Latitude, colour=I('Red'), data=df) +
scale_colour_manual(values=c("dark blue","orange"))+
labs(colour="Appointment Required")
SHmap + geom_point(
aes(x=Longitude, y=Latitude, colour=I('Red'), data=df) +
scale_colour_manual(values=c("dark blue","orange"))+
labs(colour="Appointment Required")
install.packages("mapproj")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("ggmap", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("mapproj", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
map.center <- geocode("Chicago,IL")
SHmap <- qmap(c(lon=map.center$lon, lat=map.center$lat), source="google", zoom=12)
SHmap
SHmap + geom_point(
+     aes(x=Longitude, y=Latitude, colour=I('Red'), data=df) +
+     scale_colour_manual(values=c("dark blue","orange"))+
+     labs(colour="Appointment Required")
SHmap + geom_point(aes(x=Longitude, y=Latitude, colour=I('Red'), data=df) scale_colour_manual(values=c("dark blue","orange")) labs(colour="Appointment Required")
SHmap + geom_point(aes(x=Longitude, y=Latitude, colour=I('Red'), data=df)
scale_colour_manual(values=c("dark blue","orange"))
SHmap
SHmap + geom_point(
+     aes(x=Longitude, y=Latitude, colour=I('Red'), data=df) +
+     scale_colour_manual(value=c("orange"))+
+     labs(colour="Appointment Required")
ggplot() + SHmap + geom_point(aes(x=Longitude, y=Latitude, colour=I('Red'), data=df)
Final <- SHmap + geom_point(aes(x=Longitude, y=Latitude, colour=I('Red'), data=df)
)
ggplot (Final)
ggmap(Final)
SHmap + geom_point(aes(x=Longitude, y=Latitude, colour=I('Red'), data=df))
SHmap + geom_point(
+     aes(x=Longitude, y=Latitude, colour=I('Red'), data=df) +
+     scale_colour_manual(value=c("orange"))+
+     labs(colour="Appointment Required”))
SHmap + geom_point(aes(x=Longitude, y=Latitude, colour=I('Red'), data=df)
+     scale_colour_manual(value=c("orange"))+
+     labs(colour="Appointment Required”))
geom_point(aes(x=Longitude, y=Latitude, colour=I('Red'), data=df))
geom_point(aes(x=Longitude, y=Latitude, colour=I('Red'), data=df)
scale_colour_manual(value=c("orange")))
SHmap + geom_point(aes(x=Longitude, y=Latitude, colour=I('Red'), data=df)
+     scale_colour_manual(values=c("orange")))
SHmap + geom_point(aes(x=Longitude, y=Latitude, data=df)
+     scale_colour_manual(values=c("orange")))
SHmap + geom_point(aes(x=Longitude, y=Latitude, data=df))
SHmap + geom_point(aes(x=41.8, y=87.7, data=df))
View(df)
View(df)
SHmap + geom_point(aes(x=41.8, y=87.7))
SHmap + geom_point(aes(x=41.8, y=-87.7))
SHmap + geom_point(aes(x=41.8, y=-87.7,colour=I('Red')))
SHmap + geom_point(aes(x=41.8, y=-87.7,colour="red"))
SHmap + geom_point(aes(x=-87.7, y=-41.8,colour="red"))
SHmap + geom_point(aes(x=-87.7, y=41.8,colour="red"))
SHmap + geom_point(aes(x=Longitude, y=Latitude,colour="red", data=df))
df <- read.csv("~/Documents/R/chitest/demo/df.csv")
View(df)
SHmap + geom_point(aes(x=Longitude, y=Latitude,colour="red", data=df))
SHmap + geom_point(aes(x=Longitude, y=Latitude), colour="red", data=df)
qmplot(Longitude, Latitude, data = murder, colour = I('red'), size = I(3), darken = .3)
SHmap + qmplot(Longitude, Latitude, data = murder, colour = I('red'), size = I(3), darken = .3)
SHmap + geom_point(aes(x=Longitude, y=Latitude), colour="red", data=murder)
getwd()
setwd("/users/rajivshah/Documents/R/chitest/")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
df <- read.csv("~/Documents/R/chitest/demo/df.csv")
View(df)
df$Date <- as.Date(df$Date, format="%m/%d/%Y %H:%M")
View(df)
print(df$date)
print(df$Date)
format(df$Date, format="%m/%d/%Y %H:%M")
df <- read.csv("~/Documents/R/chitest/demo/df.csv")
View(df)
df$NewDate <- strptime(df$Date, format="%m/%d/%Y %H:%M")
format(df$newDate, format="%m/%d/%Y %H:%M")
format(df$NewDate, format="%m/%d/%Y %H:%M")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
newdate
print(NewDate)
print(df$NewDate)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
print(df$NewDate)
shiny::runApp()
df <- read.csv("~/Documents/R/chitest/demo/df.csv")
View(df)
df$NewDate <- strptime(df$Date, format="%m/%d/%Y %H:%M")
View(df)
View(df)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library("caTools", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
detach("package:caTools", unload=TRUE)
shiny::runApp()
library(xts)
install.packages("xts")
install.packages("xts")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
df <- read.csv("~/Documents/R/chitest/demo/df.csv")
View(df)
getwd()
setwd("/users/rajivshah/Documents/R/chitest/demo")
save(df,file="crimestest.rda")
setwd("/users/rajivshah/Documents/R/chitest/")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
